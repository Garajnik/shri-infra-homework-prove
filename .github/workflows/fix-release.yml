name: Fix-release Workflow

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version"
        required: true
        type: string

env:
  RELEASE_VERSION: ${{ github.event.inputs.release_version }}
  YCR_REGISTRY_ID: ${{ secrets.YCR_ID }}
  YCR_TOKEN: ${{ secrets.YCR_TOKEN }}

jobs:
  checkout-release-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: releases/${{ github.event.inputs.release_version }}

  lint-and-test:
    needs: checkout-release-branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
      - run: npm ci
      - run: npm run lint
      - run: npm run test

  build-and-push-docker-image:
    needs: lint-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Log in to YCR
        run: echo "${{ secrets.YCR_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Build Docker image
        run: |
          IMAGE_NAME="${YCR_REGISTRY_ID}/app:${RELEASE_VERSION}_fix${{ github.run_number }}"
          IMAGE_LATEST="${YCR_REGISTRY_ID}/app:${RELEASE_VERSION}_latest"
          docker build -t $IMAGE_NAME -t $IMAGE_LATEST .

      - name: Push Docker image to YCR
        run: |
          IMAGE_NAME="${YCR_REGISTRY_ID}/app:${RELEASE_VERSION}_fix${{ github.run_number }}"
          IMAGE_LATEST="${YCR_REGISTRY_ID}/app:${RELEASE_VERSION}_latest"
          docker push $IMAGE_NAME
          docker push $IMAGE_LATEST

    create-fix-tag and comment to Issue:
    needs: build-and-push-docker-image
    runs-on: ubuntu-latest
    env:
      FIX_NUMBER: ${{ github.run_number }}
      CONTAINER_RIGISTRY: ${{ env.YCR_REGISTRY_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: releases/${{ github.event.inputs.release_version }}

      - name: Get Previous Fix Tag
        id: prev_fix_tag
        run: |
          TAG=$(git tag --list "${RELEASE_VERSION}_fix*" --sort=-creatordate | head -n 1)
          echo "prev_fix_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Generate commit history
        id: commit_history
        run: |
          if [ -n "${{ steps.prev_fix_tag.outputs.prev_fix_tag }}" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${{ steps.prev_fix_tag.outputs.prev_fix_tag }}..HEAD)
          else
            COMMITS=$(git log --pretty=format:"- %s (%h)" ${RELEASE_VERSION}..HEAD)
          fi
          echo "COMMIT_HISTORY<<EOF" >> $GITHUB_ENV
          echo "$COMMITS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create Fix Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag ${RELEASE_VERSION}_fix${FIX_NUMBER}
          git push origin ${RELEASE_VERSION}_fix${FIX_NUMBER}

      - name: Comment to Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TZ="Europe/Moscow"
          export TZ

          ISSUE_NUMBER=$(gh issue list --search "Release ${RELEASE_VERSION}" --json number --jq '.[0].number')
          COMMENT_BODY=$(printf "üìÖ –î–∞—Ç–∞ —Ñ–∏–∫—Å–∞: %s\nüë§ –ê–≤—Ç–æ—Ä: %s\nüê≥ Docker: cr.yandex/%s/app:%s_fix%s\n\nüìå –ö–æ–º–º–∏—Ç—ã:\n%s" \
            "$(date +'%Y-%m-%d %H:%M:%S')" \
            "${{ github.actor }}" \
            "${{ env.CONTAINER_RIGISTRY }}" \
            "${RELEASE_VERSION}" \
            "${FIX_NUMBER}" \
            "${{ env.COMMIT_HISTORY }}")

          gh issue comment "$ISSUE_NUMBER" --body "$COMMENT_BODY"
